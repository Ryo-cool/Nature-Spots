back/**/*.rb

# Ruby on Railsバックエンドルール
- このプロジェクトではRails 6.0.3とRuby 2.6.3を使用しています
- 以下の改善点に取り組んでいます：

## コーディング規約
- 各クラスやメソッドにはドキュメントコメント（RDoc形式）を追加する
- モデルにはバリデーションとリレーションシップを明示的に記述する
- Fat Controllerを避け、ビジネスロジックはサービスクラスに移動させる
- DRY原則を守り、共通コードはconcernやヘルパーに抽出する

## パフォーマンス改善
- N+1クエリを避けるため、ActiveRecord::Relationでincludesやpreloadを使用する
- 大きなデータセットに対しては、ページネーションを実装する
- 頻繁に参照されるデータにはキャッシュを検討する
- ActiveRecordのコールバックの過剰使用を避ける

## セキュリティ対策
- Strong Parametersを使用して適切なパラメータ制御を行う
- 認証・認可には適切なgemを使用し、セキュリティホールを作らない
- SQLインジェクションを防ぐため、生のSQLは避ける
- XSS対策を徹底する

## テスト
- モデル、コントローラー、サービスクラスには単体テストを書く
- 重要な機能には結合テストを書く
- テストカバレッジを高く保つ

## リファクタリング対象
- users_controller.rbとspots_controller.rbには重複コードがある
- N+1クエリ問題が複数のコントローラーで発生している
- エラーハンドリングが不十分
- バリデーションの強化が必要

## ディレクトリ構造
- appディレクトリ内の適切な場所にコードを配置する
- services/ - ビジネスロジックを含むサービスクラス
- concerns/ - 共通のコンサーン
- uploaders/ - ファイルアップロード関連のコード 